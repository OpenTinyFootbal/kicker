<?xml version="1.0" encoding="utf-8"?>
<odoo>

  <!--
  Genral Templates
-->
<template id="assets_frontend" name="Common Assets (used in backend interface and website)" inherit_id="web.assets_frontend">
  <xpath expr="." position="inside">
    <link rel='stylesheet' type="text/less" href='/kicker/static/src/less/kicker.less'/>
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet"/>
    <link rel="stylesheet" href="/kicker/static/lib/chartist/chartist.min.css"/>
    <script type="text/javascript" src="/kicker/static/lib/chartist/chartist.min.js"/>
    <script type="text/javascript" src="/bus/static/src/js/bus.js"/>
    <script type="text/javascript" src="/kicker/static/src/js/router.js"/>
    <script type="text/javascript" src="/kicker/static/src/js/kicker.js"/>
    <script type="text/javascript" src="/kicker/static/lib/jquery.mobile.custom.min.js"/>
  </xpath>
</template>

<template id="layout" name="Web layout">&lt;!DOCTYPE html&gt;
  <html>
    <head>
      <meta charset="utf-8"/>
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
      <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>

      <title t-esc="title or 'Odoo'"/>
      <link type="image/x-icon" rel="shortcut icon" t-att-href="x_icon or '/web/static/src/img/favicon.ico'"/>

      <t t-call-assets="web.assets_common" t-js="false"/>
      <t t-call-assets="web.assets_frontend" t-js="false"/>

      <t t-raw="head or ''"/>
    </head>
    <body t-att-class="body_classname">
      <t t-raw="0"/>
      <t t-call-assets="web.assets_common" t-css="false"/>
      <t t-call-assets="web.assets_frontend" t-css="false"/>
    </body>
  </html>
</template>

<!--
App Pages Templates
-->
<template id="page_is_free" name="Is the Kicker Free?">
  <t t-call="kicker.layout">
    <div t-attf-class="o_kicker_background o_kicker_bg o_kicker_bg_{{ bg or 0 }}"/>
    <div t-attf-class="o_kicker_free o_kicker_bg o_kicker_bg_{{ bg or 0 }}">
      <div class="o_kicker_free_content">
        <h1>Kicker is</h1>
        <t t-if="is_free">
          <h1 class="bling-bling">free</h1>
        </t>
        <t t-else="">
          <h1 class="bling-bling"><span>busy</span></h1>
        </t>
      </div>
    </div>
  </t>
</template>

<template id="app" name="kickr.io">
  <t t-call="kicker.layout">
    <t t-set="head">
        <link rel="manifest" href="/kicker/static/manifest.webmanifest"/>
        <meta name="theme-color" content="#875a7b"/>
    </t>
    <!-- Close Sidebar Button -->
    <div id="top-header">
        <div class="col-xs-8 col-md-10">
            <span id="burger-toggle" class="visible-xs">
                <i class="fa fa-bars"/>
            </span>
            <span id="logo">
                Awesome Logo
            </span>
        </div>
        <div class="col-xs-4 col-md-2 o_kicker_status o_status_free">
            <strong>&#183;&#160;&#160;Free</strong>
        </div>
    </div>

    <nav id="sidebar">

      <!-- Sidebar Header -->
      <div class="sidebar-header">
        <img src="/kicker/avatar" class="img-circle o_kicker_profile_image"/>
        <h3 t-field="user.name"/>
        <h6>You suck at this. Please stop.</h6>
      </div>

      <!-- Sidebar Links -->
      <ul class="nav nav-pills nav-stacked">
        <li><a href="/kicker/dashboard" data-router="true">Dashboard</a></li>
        <li><a href="/kicker/profile" data-router="true">Profile</a></li>
        <li><a href="#">Stats</a></li>
        <li><a href="/kicker/community" data-router="true">Community</a></li>
        <li><a href="#">Log Out</a></li>
      </ul>
    </nav>

    <div class="overlay"/>

    <div class="container-fluid o_kicker_main">
      <div class="row">
        <div class="col-md-12 o_kicker_content">
          <div class="loader">
              <p><i class="fa fa-3x fa-fw fa-circle-o-notch fa-spin"></i></p>
              <p>Loading...</p>
          </div>
        </div>
      </div>
    </div>
    <a href="/kicker/score" class="fab" data-router="true">+</a>
    <div class="offline-toast hidden">
        You are currently off-line.
        <btn class="btn btn-xs btn-default"
             data-toggle="popover"
             data-title="Working Off-line"
             data-content="When off-line, you can only access cached data; posting results is disabled and some content may be out-of-date. Everything will work normally once you get back online.">So what?</btn>
    </div>
  </t>
</template>

<template id="service_worker" name="Kicker ServiceWorker JS">
    var CACHE_NAME = 'kicker-cache-v5';
    var urlsToCache = [
    '/kicker/app',
    <t t-foreach="urls" t-as="url">
        '<t t-esc="url"/>',
    </t>
    ];

    /* Utils functions (e.g. fetches, caching, etc.) */
    addToCache = function (request, response) {
        if (response.ok) {
            const copy = response.clone()
            caches.open(CACHE_NAME).then(function (cache) {
                cache.put(request, copy)
            }
            )
            return response
        }
    }
    fetchFromCache = function (event) {
        return caches.match(event.request).then(function (response) {
            if (!response) {
                throw Error('${event.request.url} not found in cache')
            }
            return response
        }
        )
    }

    offlineResponse = function () {
        return new Response('Sorry, the application is offline.')
    }

    respondFromCacheThenNetwork = function (event) {
      // Check cache first, then network
      const request = event.request
      event.respondWith(
        fetchFromCache(event)
          .catch(() => fetch(request))
          .then(response => addToCache(request, response))
          .catch(() => offlineResponse())
        )
    }

    respondFromNetworkThenCache = function (event) {
      // Check network first, then cache
      const request = event.request
      event.respondWith(
        fetch(request)
          .then(response => addToCache(request, response))
          .catch(() => fetchFromCache(event))
          .catch(() => offlineResponse())
      )
    }

    shouldHandleFetch = function (event) {
        return (
            event.request.method.toLowerCase() === 'get'
            &amp;&amp; (event.request.url.indexOf('google-analytics.com') === -1)
            &amp;&amp; (event.request.url.indexOf('googleapis.com') === -1));
    }


    /* Event listeners &amp; lifecycle */
    self.addEventListener('install', function (event) {
      // Perform install steps
      event.waitUntil(
        caches.open(CACHE_NAME)
          .then(function(cache) {
            console.log('Opened cache');
            return cache.addAll(urlsToCache);
          })
      );
    });
    
    self.addEventListener('activate', function(event) {
    event.waitUntil(
      caches.keys().then(function(cacheNames) {
        return Promise.all(
          cacheNames.filter(function(cacheName) {
            return cacheName !== CACHE_NAME;
          }).map(function(cacheName) {
            return caches.delete(cacheName);
          })
        );
      })
    );
  });


    self.addEventListener('fetch', function (event) {
        if (shouldHandleFetch(event)) {
            respondFromNetworkThenCache(event)
        }
    });
</template>

</odoo>

<?xml version="1.0" encoding="utf-8"?>
<odoo>

  <!--
  Genral Templates
-->
<template id="assets_frontend" name="Common Assets (used in backend interface and website)" inherit_id="web.assets_frontend">
  <xpath expr="." position="inside">
    <link rel='stylesheet' type="text/less" href='/kicker/static/src/scss/kicker.scss'/>
    <link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,600,700" rel="stylesheet"/>
    <script type="text/javascript" src="/kicker/static/lib/Chart.bundle.min.js"/>
    <script type="text/javascript" src="/kicker/static/src/js/router.js"/>
    <script type="text/javascript" src="/kicker/static/src/js/kicker.js"/>
    <script type="text/javascript" src="/kicker/static/lib/jquery.mobile.custom.min.js"/>
  </xpath>
</template>

<template id="_assets_frontend_helpers" inherit_id="web_editor._assets_frontend_helpers" priority="15">
        <xpath expr="//link[@href='/web_editor/static/src/scss/bootstrap_overridden.scss']" position="replace">
          <link rel='stylesheet' type="text/less" href='/kicker/static/src/scss/variables.scss'/>
        </xpath>
</template>

<template id="layout" name="Web layout">&lt;!DOCTYPE html&gt;
  <html>
    <head>
      <meta charset="utf-8"/>
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
      <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>

      <title t-esc="title or 'Odoo'"/>
      <link type="image/x-icon" rel="shortcut icon" t-att-href="x_icon or '/web/static/src/img/favicon.ico'"/>

      <t t-call-assets="web.assets_common" t-js="false"/>
      <t t-call-assets="web.assets_frontend" t-js="false"/>

      <t t-raw="head or ''"/>
    </head>
    <body t-att-class="body_classname">
      <t t-raw="0"/>
      <t t-call-assets="web.assets_common" t-css="false"/>
      <t t-call-assets="web.assets_frontend" t-css="false"/>
    </body>
  </html>
</template>

<!--
Login Restyling
-->
<template id="login_layout" name="Login Layout" inherit_id='web.login_layout'>
  <xpath expr="//div[@class='card-body']/div" position="attributes">
    <attribute name="t-attf-class">text-center pb-3 border-bottom {{'mb-3' if form_small else 'mb-4'}} d-none d-md-block</attribute>
  </xpath>
  <xpath expr="//div[contains(@class,'container')]" position="before">
    <div class="login-shape-top">
      <div class="logo-subshape-top"/>
      <img class="d-block d-md-none" src="/kicker/static/icons/logo.svg"/>
    </div>
  </xpath>
  <xpath expr="//div[contains(@class,'container')]" position="after">
    <div class="login-shape-bottom"/>
  </xpath>
</template>

<template id="login" name="Login" inherit_id='web.login'>
  <xpath expr="//form//div" position="before">
    <h3 class="text-center text-primary"><strong>Hello.</strong></h3>
  </xpath>
  <xpath expr="//label[@for='login']" position="replace"/>
  <xpath expr="//input[@name='login']" position="replace">
    <input type="text" placeholder="Username" name="login" t-att-value="login" id="login" class="form-control input-ul rounded-0" required="required" autofocus="autofocus" autocapitalize="off"/>
  </xpath>
  <xpath expr="//label[@for='password']" position="replace"/>
  <xpath expr="//input[@name='password']" position="replace">
    <t t-call="kicker.password_field_reveal"/>
  </xpath>
  <xpath expr="//button[@type='submit']" position="attributes">
    <attribute name="class">btn btn-primary btn-block rounded-btn</attribute>
  </xpath>
</template>

<!-- Reveal password field (button to see the password). The only param is name (the nname attribute of the field)-->
<template id="password_field_reveal" name="Password Field Reveal (can show and hide the password)">
  <div class="odoo-password-reveal input-group">
    <input type="password" placeholder="Password" name="password" id="password" class="form-control input-ul rounded-0" required="required" autocomplete="current-password" t-att-autofocus="'autofocus' if login else None" maxlength="4096"/>
    <button class="btn btn-link input-ul rounded-0" type="button">
      <img src="/kicker/static/icons/eye.svg" width="14px"/>
    </button>
  </div>
  <!-- Js for the password reveal field -->
  <script type="text/javascript">
    $(function() {
      $('.odoo-password-reveal button').click(function(){
          if($(".odoo-password-reveal input").attr('type') === 'password'){
              $(".odoo-password-reveal input").replaceWith($('.odoo-password-reveal input').clone().attr('type', 'text'));
          }else{
              $(".odoo-password-reveal input").replaceWith($('.odoo-password-reveal input').clone().attr('type', 'password'));
          }
      });
    });
  </script>
</template>

<!-- disable enterprise login override -->
<record model="ir.ui.view" id="web_enterprise.webclient_login">
  <field name="active" eval="False"/>
</record>

<!--
App Pages Templates
-->
<template id="page_is_free" name="Is the Kicker Free?">
  <t t-call="kicker.layout">
    <div t-attf-class="o_kicker_background o_kicker_bg o_kicker_bg_{{ bg or 0 }}"/>
    <div t-attf-class="o_kicker_free o_kicker_bg o_kicker_bg_{{ bg or 0 }}">
      <div class="o_kicker_free_content">
        <h1>Kicker is</h1>
        <t t-if="is_free">
          <h1 class="bling-bling">free</h1>
        </t>
        <t t-else="">
          <h1 class="bling-bling"><span>busy</span></h1>
        </t>
      </div>
    </div>
  </t>
</template>

<template id="app" name="kickr.io">
  <t t-call="kicker.layout">
    <t t-set="head">
        <link rel="manifest" href="/kicker/static/manifest.webmanifest"/>
        <meta name="theme-color" content="#875a7b"/>
    </t>
    <!-- Close Sidebar Button -->
    <div class="row" id="top-header">
        <div class="col-8 col-lg-10">
            <span id="burger-toggle" class="d-block d-md-none">
                <img src="/kicker/static/icons/burger.svg" width="14px"/>
            </span>
        </div>
        <div class="col-4 col-lg-2 o_kicker_status o_status_free">
            <strong>Free</strong>
        </div>
    </div>

    <nav id="sidebar">

      <!-- Sidebar Header -->
      <div class="sidebar-header">
        <img src="/kicker/avatar" class="rounded-circle o_kicker_profile_image"/>
        <h5 class="text-primary"><strong>Hello <span class="user_name" t-field="user.name"/>,</strong></h5>
        <h6 class="text-muted">Please note that you suck at this.</h6>
      </div>
      <div class="gradient-border"/>

      <!-- Sidebar Links -->
      <ul id="main-nav" class="nav flex-column">
        <li class="nav-item"><a class="nav-link text-primary" href="/app/dashboard" data-router="true">Dashboard</a></li>
        <li class="nav-item"><a class="nav-link text-primary" href="/app/profile" data-router="true">Profile</a></li>
        <li class="nav-item"><a class="nav-link text-primary" href="#">Stats</a></li>
        <li class="nav-item"><a class="nav-link text-primary" href="/app/community" data-router="true">Community</a></li>
      </ul>
      <div id="small-nav">
        <hr/>
        <ul class="nav flex-column">
          <li class="nav-item"><a class="nav-link text-primary" href="/app/about" data-router="true">About</a></li>
          <li class="nav-item"><a class="nav-link text-primary" href="/web/session/logout">Log Out</a></li>
        </ul>
      </div>

    </nav>

    <div class="overlay"/>

    <div class="container-fluid o_kicker_main">
      <div class="row">
        <div class="col-lg-12 o_kicker_content">
          <div class="loader">
              <p><i class="fa fa-3x fa-fw fa-circle-o-notch fa-spin"></i></p>
              <p>Loading...</p>
          </div>
        </div>
      </div>
    </div>
    <div class="offline-warning warning-hide text-center">
      <h3 class="text-primary">You're offline :(</h3>
      <p>Despite our best efforts, this app can only manage to display this nice warning instead of a shitty error message from your browser.</p>
      <p>At least it's pretty.</p>
      <img src="/kicker/static/img/network.gif"/>
      <p class="text-muted">Get back online and it'll go away by itself...</p>
    </div>
  </t>
</template>

<!--
README

This view contains the ServiceWorker used to cache most of the assets of the app locally
on mobile browsers, allowing the app to 'work' offline (meaning, mostly, that it doesn't
display a 'no connection' error, but that the app loads and says it can't work without a
network connection).

You might wonder why I've decided to put javascript in a view instead of in a javascript
file, and that would be a valid question. The answer is that I needed to dynamically put
the urls of the frontend and backend assets in the js code, which is impossible to do in
a normal js files since assets change url at every 'compilation'; so a controller callls
this view with the urls passed in the context and voilÃ !, you get a nice and dynamically
allocated list of URLs. \o/
-->
<template id="service_worker" name="Kicker ServiceWorker JS">
    var CACHE_NAME = 'kicker-cache-v5';
    var urlsToCache = [
    '/app',
    <t t-foreach="urls" t-as="url">
      '<t t-esc="url"/>',
    </t>
    ];

    /* Utils functions (e.g. fetches, caching, etc.) */
    addToCache = function (request, response) {
        if (response.ok) {
            const copy = response.clone()
            caches.open(CACHE_NAME).then(function (cache) {
                cache.put(request, copy)
            }
            )
            return response
        }
    }
    fetchFromCache = function (event) {
        return caches.match(event.request).then(function (response) {
            if (!response) {
                throw Error('${event.request.url} not found in cache')
            }
            return response
        }
        )
    }

    offlineResponse = function () {
        return new Response('Sorry, the application is offline.')
    }

    respondFromCacheThenNetwork = function (event) {
      // Check cache first, then network
      const request = event.request
      event.respondWith(
        fetchFromCache(event)
          .catch(() => fetch(request))
          .then(response => addToCache(request, response))
          .catch(() => offlineResponse())
        )
    }

    respondFromNetworkThenCache = function (event) {
      // Check network first, then cache
      const request = event.request
      event.respondWith(
        fetch(request)
          .then(response => addToCache(request, response))
          .catch(() => fetchFromCache(event))
          .catch(() => offlineResponse())
      )
    }

    shouldHandleFetch = function (event) {
        return (
            event.request.method.toLowerCase() === 'get'
            &amp;&amp; (event.request.url.indexOf('google-analytics.com') === -1)
            &amp;&amp; (event.request.url.indexOf('googleapis.com') === -1));
    }


    /* Event listeners &amp; lifecycle */
    self.addEventListener('install', function (event) {
      // Perform install steps
      event.waitUntil(
        caches.open(CACHE_NAME)
          .then(function(cache) {
            console.log('Opened cache');
            return cache.addAll(urlsToCache);
          })
      );
    });
    
    self.addEventListener('activate', function(event) {
    event.waitUntil(
      caches.keys().then(function(cacheNames) {
        return Promise.all(
          cacheNames.filter(function(cacheName) {
            return cacheName !== CACHE_NAME;
          }).map(function(cacheName) {
            return caches.delete(cacheName);
          })
        );
      })
    );
  });


    self.addEventListener('fetch', function (event) {
        if (shouldHandleFetch(event)) {
            respondFromNetworkThenCache(event)
        }
    });
</template>

</odoo>
